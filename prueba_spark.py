# -*- coding: utf-8 -*-
"""Prueba-spark.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aax8KIb1Kdaj4SDy8_PpPunkXBMRhc-B
"""

#Descargamos spark
!pip install pyspark

from pyspark.sql import SparkSession
import pandas as pd

# Crear sesión de Spark
spark = SparkSession.builder.appName("DementiaModel").getOrCreate()

#Cargar y analizar la dataa
df = pd.read_csv("data.csv")

# Convertir DataFrame de pandas a DataFrame de Spark
spark_df = spark.createDataFrame(df)

# Mostrar los primeros registros
spark_df.show(5)

import pickle

# Cargar el modelo desde el archivo .pkl
with open("modelo.pkl", "rb") as f:
    modelo = pickle.load(f)

from pyspark.sql.functions import when, col

# Asegurar codificación de 'gender' como numérico
spark_df = spark_df.withColumn("gender", when(col("gender") == "F", 0).otherwise(1))

from pyspark.sql.functions import udf
from pyspark.sql.types import DoubleType
import numpy as np

# Columnas que espera el modelo
feature_columns = ['age', 'gender', 'educationyears', 'glucose_min',
                   'cholesterol_total', 'EF', 'PS', 'Global']

# Función que aplica el modelo
def predict_dementia(*cols):
    X = np.array(cols).reshape(1, -1)
    return float(modelo.predict(X)[0])  # devuelve 0 o 1

# Crear la UDF
predict_udf = udf(predict_dementia, DoubleType())

# Generar nueva columna con predicción
spark_df = spark_df.withColumn("prediction", predict_udf(*[col(c) for c in feature_columns]))

# Ver algunas predicciones
spark_df.select("age", "gender", "prediction").show(10)